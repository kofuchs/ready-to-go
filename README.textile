h1. "ready-to-go":http://github.com/kofuchs/ready-to-go

ready-to-go is a Rails application that can be used as a start-up project. It includes some useful functions and plugins I like to use in my own projects with an easy way to configure them all in one place.

h2. TODO
* Add thinking-sphinx
* Add capistrano
* Add locale files
* Add file_column

h2. Information

* index.html is already removed
* If you want to use the cookie-based default option instead of having the sessions stored in the database, comment the last line in *config/initializers/session_store.rb* and remove the *db/migrate/002_sessions.rb* migration file.
* An admin user is already created with password set as "password". Two roles are created: *User* and *Admin*.

h2. Installation

* The best way to use this project is to download it and unzip it in the location you choose.
* Edit the *database.yml* file (Usually I use mysql instead of sqlite3 but the default configuration is also there)
* Edit the *configuration.yml* with your application/site details (*initializers/configuration.rb* does all the plugin configuration based on the values found in the yml file)
* To install/update the gems included on this project: <pre><code>rake gems:install</code></pre>
* To create your database (append *:all* and you create the development/test/production databases): <pre><code>rake db:create</code></pre>
* To create all the tables needed: <pre><code>rake db:migrate</code></pre>

h2. Plugins configuration

All plugins came with a basic configuration, if you plan to customize you can check the plugins page.

h3. "exception_notification":http://github.com/rails/exception_notification

The Exception Notifier plugin provides a mailer object and a default set of templates for sending email notifications when errors occur in a Rails application.

h3. "whenever":http://github.com/javan/whenever

Whenever is a Ruby gem that provides a clear syntax for defining cron jobs. It outputs valid cron syntax and can even write your crontab file for you.

If you plan to use this extension to manage cron jobs (e.g. If you are using sphinx and want to index your project every hour), you need to edit the *config/schedule.rb* file.
After you finish editing the *schedule.rb* file, just run:

<pre><code>$ whenever</code></pre>
	
h3. "will_paginate":http://github.com/mislav/will_paginate/

will_paginate is used to limit the number of records displayed in a single page.

h3. "restful-authentication":http://github.com/technoweenie/restful-authentication

This plugin provides a foundation for securely managing user authentication:
* Login / logout
* Secure password handling
* Account activation by validating email (installed with)
* Account approval / disabling by admin

You can remove the routes that were created for logout, login, register and signup actions in your *routes.rb* file.

Inside the users view folder you will see:
* _sidebar => this one includes the login box (Usually this is what I want)
* _sidebar_link ==> this one links to a login page

h3. "forgot_password":http://github.com/greenisus/forgot_password

Integrated with restful-authentication it is very helpful when people forget their passwords. It sends an e-mail to the user with a link were he/she can change the password.

h3. "declarative_authorization":http://github.com/stffn/declarative_authorization

The declarative authorization plugin offers an authorization mechanism. To set the rules just change the file *config/authorization_rules.rb*

Usually I only need two types of user: Admin and User. At the moment someone is registered it becomes an User and can be turned in an Admin, otherwise it's only a guest. 




